When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository would be accessible anywhere you have internet access,
    so you could work on your files from anywhere on the internet.  It also
    allows you to share your work with others anywhere, and it serves to 
    backup your work remotely which would be very useful if you lost your
    local work to a hard drive crash or other catastrophe.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    For the same reason you would only want to commit changes manually
    (see lesson 1 reflection 3), you want to control when updates occur
    so you can manage them.  Also, remote work may be happening as Git
    woudl try to automatically pull changes and that could cause conflicts
    and issues.  It is best that you are in control of pushes and pulls
    so that conflicts and confusion are avoided.


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is like a clone, but it only exists on GitHub, so you can only 
    (and you must) use it there.  It differs slighlty from a clone since
    GitHub does other things behind the scenes.  Clones are essentially
    a copy of an entire repository including all commits up to that point
    in time at which it was cloned.  You would use this to copy a repository
    on your remote computer or another remote computer to work on it
    independent of the original repository.  A branch is part of a 
    repository that splits off from a commit node.  You would use a branch
    to experiment with code that you might later merge back into the 
    master branch of the code if it works.


What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefit is beind able to work locally on the latest version of the
    remote repository to minimize differences and merges the next time you
    commit and push changes.
    

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
